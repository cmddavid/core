"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.View_AgmMap_0 = View_AgmMap_0;
exports.View_AgmMap_Host_0 = View_AgmMap_Host_0;
exports.AgmMapNgFactory = exports.RenderType_AgmMap = void 0;

var i0 = _interopRequireWildcard(require("@angular/core"));

var i1 = _interopRequireWildcard(require("../services/managers/marker-manager"));

var i2 = _interopRequireWildcard(require("../services/google-maps-api-wrapper"));

var i3 = _interopRequireWildcard(require("../services/managers/info-window-manager"));

var i4 = _interopRequireWildcard(require("../services/managers/circle-manager"));

var i5 = _interopRequireWildcard(require("../services/managers/rectangle-manager"));

var i6 = _interopRequireWildcard(require("../services/managers/polyline-manager"));

var i7 = _interopRequireWildcard(require("../services/managers/polygon-manager"));

var i8 = _interopRequireWildcard(require("../services/managers/kml-layer-manager"));

var i9 = _interopRequireWildcard(require("../services/managers/data-layer-manager"));

var i10 = _interopRequireWildcard(require("../services/maps-api-loader/maps-api-loader"));

var i11 = _interopRequireWildcard(require("../services/fit-bounds"));

var i12 = _interopRequireWildcard(require("./map"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */
var styles_AgmMap = [".agm-map-container-inner[_ngcontent-%COMP%] {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content[_ngcontent-%COMP%] {\n      display:none;\n    }"];
var RenderType_AgmMap = i0.ɵcrt({
  encapsulation: 0,
  styles: styles_AgmMap,
  data: {}
});
exports.RenderType_AgmMap = RenderType_AgmMap;

function View_AgmMap_0(_l) {
  return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, "div", [["class", "agm-map-container-inner sebm-google-map-container-inner"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, "div", [["class", "agm-map-content"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, null);
}

function View_AgmMap_Host_0(_l) {
  return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 11, "agm-map", [], [[2, "sebm-google-map-container", null]], null, null, View_AgmMap_0, RenderType_AgmMap)), i0.ɵprd(4608, null, i1.MarkerManager, i1.MarkerManager, [i2.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i3.InfoWindowManager, i3.InfoWindowManager, [i2.GoogleMapsAPIWrapper, i0.NgZone, i1.MarkerManager]), i0.ɵprd(4608, null, i4.CircleManager, i4.CircleManager, [i2.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i5.RectangleManager, i5.RectangleManager, [i2.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i6.PolylineManager, i6.PolylineManager, [i2.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i7.PolygonManager, i7.PolygonManager, [i2.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i8.KmlLayerManager, i8.KmlLayerManager, [i2.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(4608, null, i9.DataLayerManager, i9.DataLayerManager, [i2.GoogleMapsAPIWrapper, i0.NgZone]), i0.ɵprd(512, null, i2.GoogleMapsAPIWrapper, i2.GoogleMapsAPIWrapper, [i10.MapsAPILoader, i0.NgZone]), i0.ɵprd(512, null, i11.FitBoundsService, i11.FitBoundsService, [i10.MapsAPILoader]), i0.ɵdid(11, 770048, null, 0, i12.AgmMap, [i0.ElementRef, i2.GoogleMapsAPIWrapper, i11.FitBoundsService], null, null)], function (_ck, _v) {
    _ck(_v, 11, 0);
  }, function (_ck, _v) {
    var currVal_0 = true;

    _ck(_v, 0, 0, currVal_0);
  });
}

var AgmMapNgFactory = i0.ɵccf("agm-map", i12.AgmMap, View_AgmMap_Host_0, {
  longitude: "longitude",
  latitude: "latitude",
  zoom: "zoom",
  minZoom: "minZoom",
  maxZoom: "maxZoom",
  draggable: "mapDraggable",
  disableDoubleClickZoom: "disableDoubleClickZoom",
  disableDefaultUI: "disableDefaultUI",
  scrollwheel: "scrollwheel",
  backgroundColor: "backgroundColor",
  draggableCursor: "draggableCursor",
  draggingCursor: "draggingCursor",
  keyboardShortcuts: "keyboardShortcuts",
  zoomControl: "zoomControl",
  zoomControlOptions: "zoomControlOptions",
  styles: "styles",
  usePanning: "usePanning",
  streetViewControl: "streetViewControl",
  streetViewControlOptions: "streetViewControlOptions",
  fitBounds: "fitBounds",
  scaleControl: "scaleControl",
  scaleControlOptions: "scaleControlOptions",
  mapTypeControl: "mapTypeControl",
  mapTypeControlOptions: "mapTypeControlOptions",
  panControl: "panControl",
  panControlOptions: "panControlOptions",
  rotateControl: "rotateControl",
  rotateControlOptions: "rotateControlOptions",
  fullscreenControl: "fullscreenControl",
  fullscreenControlOptions: "fullscreenControlOptions",
  mapTypeId: "mapTypeId",
  clickableIcons: "clickableIcons",
  gestureHandling: "gestureHandling"
}, {
  mapClick: "mapClick",
  mapRightClick: "mapRightClick",
  mapDblClick: "mapDblClick",
  centerChange: "centerChange",
  boundsChange: "boundsChange",
  mapTypeIdChange: "mapTypeIdChange",
  idle: "idle",
  zoomChange: "zoomChange",
  mapReady: "mapReady"
}, ["*"]);
exports.AgmMapNgFactory = AgmMapNgFactory;